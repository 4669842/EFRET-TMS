//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Efret_TMS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("axsCODataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class axsCODataSet : global::System.Data.DataSet {
        
        private NewCODataTable tableNewCO;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public axsCODataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected axsCODataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["NewCO"] != null)) {
                    base.Tables.Add(new NewCODataTable(ds.Tables["NewCO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NewCODataTable NewCO {
            get {
                return this.tableNewCO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            axsCODataSet cln = ((axsCODataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["NewCO"] != null)) {
                    base.Tables.Add(new NewCODataTable(ds.Tables["NewCO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableNewCO = ((NewCODataTable)(base.Tables["NewCO"]));
            if ((initTable == true)) {
                if ((this.tableNewCO != null)) {
                    this.tableNewCO.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "axsCODataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/axsCODataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableNewCO = new NewCODataTable();
            base.Tables.Add(this.tableNewCO);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeNewCO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            axsCODataSet ds = new axsCODataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void NewCORowChangeEventHandler(object sender, NewCORowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NewCODataTable : global::System.Data.TypedTableBase<NewCORow> {
            
            private global::System.Data.DataColumn columnIdCO;
            
            private global::System.Data.DataColumn columnNewCO;
            
            private global::System.Data.DataColumn columnDateCreation;
            
            private global::System.Data.DataColumn columnDateUpdate;
            
            private global::System.Data.DataColumn columnIdContractHolder;
            
            private global::System.Data.DataColumn columnContractHolderReference;
            
            private global::System.Data.DataColumn columnCMR;
            
            private global::System.Data.DataColumn columnSalesPrice;
            
            private global::System.Data.DataColumn columnConversionRate;
            
            private global::System.Data.DataColumn columnSalesPriceCurrency;
            
            private global::System.Data.DataColumn columnSalesPriceInCurrency;
            
            private global::System.Data.DataColumn columnSalesPriceVATCode;
            
            private global::System.Data.DataColumn columnSalesPriceVATRate;
            
            private global::System.Data.DataColumn columnSalesPriceVATAmount;
            
            private global::System.Data.DataColumn columnContractHolderPaymentTerm;
            
            private global::System.Data.DataColumn columnContractHolderPaymentTermOEM;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnInvoiceInGBP;
            
            private global::System.Data.DataColumn columnAllRisksInsurance;
            
            private global::System.Data.DataColumn columnContractHolderEmail;
            
            private global::System.Data.DataColumn columnContractHolderTel;
            
            private global::System.Data.DataColumn columnContractHolderMob;
            
            private global::System.Data.DataColumn columnTrailerNumber;
            
            private global::System.Data.DataColumn columnTrailerTypeAutorised;
            
            private global::System.Data.DataColumn columnInterModal;
            
            private global::System.Data.DataColumn columnInvoiced;
            
            private global::System.Data.DataColumn columnUserCreation;
            
            private global::System.Data.DataColumn columnUserUpdate;
            
            private global::System.Data.DataColumn columnUserOwner;
            
            private global::System.Data.DataColumn columnActif;
            
            private global::System.Data.DataColumn columnXroute;
            
            private global::System.Data.DataColumn columnTripType2;
            
            private global::System.Data.DataColumn columnBaseFreightRate;
            
            private global::System.Data.DataColumn columnFuelSurcharge;
            
            private global::System.Data.DataColumn columnStopOver1;
            
            private global::System.Data.DataColumn columnStopOver2;
            
            private global::System.Data.DataColumn columnFuelSurchargeRate;
            
            private global::System.Data.DataColumn columnAdhocRate;
            
            private global::System.Data.DataColumn columndemurrage;
            
            private global::System.Data.DataColumn columnDemurageCode;
            
            private global::System.Data.DataColumn columnInvoiceNumber;
            
            private global::System.Data.DataColumn columnInvoiceDate;
            
            private global::System.Data.DataColumn columnInvoicePath;
            
            private global::System.Data.DataColumn columnLine;
            
            private global::System.Data.DataColumn columnInvoiceEDI;
            
            private global::System.Data.DataColumn columnShipperAccount;
            
            private global::System.Data.DataColumn columnReroutingSurcharge;
            
            private global::System.Data.DataColumn columnWharehousing;
            
            private global::System.Data.DataColumn columnRedelivery;
            
            private global::System.Data.DataColumn columnCancellation;
            
            private global::System.Data.DataColumn columnBillingAccount;
            
            private global::System.Data.DataColumn columnAdHocSurcharge;
            
            private global::System.Data.DataColumn columnDriverDententionAtUnloading;
            
            private global::System.Data.DataColumn columneShipCo;
            
            private global::System.Data.DataColumn columnCorridor;
            
            private global::System.Data.DataColumn columnCoS;
            
            private global::System.Data.DataColumn columnCustomClearance;
            
            private global::System.Data.DataColumn columnP44ToUpload;
            
            private global::System.Data.DataColumn columnP44Uploaded;
            
            private global::System.Data.DataColumn columnP44ShipmentID;
            
            private global::System.Data.DataColumn columnP44LastUpdate;
            
            private global::System.Data.DataColumn columnP44StatusCode;
            
            private global::System.Data.DataColumn columnP44ReasonCode;
            
            private global::System.Data.DataColumn columnP44ReasonDescription;
            
            private global::System.Data.DataColumn columnP44TrackTrailer;
            
            private global::System.Data.DataColumn columnP44TrackingStarted;
            
            private global::System.Data.DataColumn columnP44TrackingCompleted;
            
            private global::System.Data.DataColumn columnP44TrackingError;
            
            private global::System.Data.DataColumn columnP44UploadError;
            
            private global::System.Data.DataColumn columnP44Latitude;
            
            private global::System.Data.DataColumn columnP44Longitude;
            
            private global::System.Data.DataColumn columnP44CurrentStop;
            
            private global::System.Data.DataColumn columnSSMA_TimeStamp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NewCODataTable() {
                this.TableName = "NewCO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal NewCODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected NewCODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdCOColumn {
                get {
                    return this.columnIdCO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NewCOColumn {
                get {
                    return this.columnNewCO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DateCreationColumn {
                get {
                    return this.columnDateCreation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DateUpdateColumn {
                get {
                    return this.columnDateUpdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdContractHolderColumn {
                get {
                    return this.columnIdContractHolder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ContractHolderReferenceColumn {
                get {
                    return this.columnContractHolderReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CMRColumn {
                get {
                    return this.columnCMR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SalesPriceColumn {
                get {
                    return this.columnSalesPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConversionRateColumn {
                get {
                    return this.columnConversionRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SalesPriceCurrencyColumn {
                get {
                    return this.columnSalesPriceCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SalesPriceInCurrencyColumn {
                get {
                    return this.columnSalesPriceInCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SalesPriceVATCodeColumn {
                get {
                    return this.columnSalesPriceVATCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SalesPriceVATRateColumn {
                get {
                    return this.columnSalesPriceVATRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SalesPriceVATAmountColumn {
                get {
                    return this.columnSalesPriceVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ContractHolderPaymentTermColumn {
                get {
                    return this.columnContractHolderPaymentTerm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ContractHolderPaymentTermOEMColumn {
                get {
                    return this.columnContractHolderPaymentTermOEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InvoiceInGBPColumn {
                get {
                    return this.columnInvoiceInGBP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AllRisksInsuranceColumn {
                get {
                    return this.columnAllRisksInsurance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ContractHolderEmailColumn {
                get {
                    return this.columnContractHolderEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ContractHolderTelColumn {
                get {
                    return this.columnContractHolderTel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ContractHolderMobColumn {
                get {
                    return this.columnContractHolderMob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TrailerNumberColumn {
                get {
                    return this.columnTrailerNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TrailerTypeAutorisedColumn {
                get {
                    return this.columnTrailerTypeAutorised;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InterModalColumn {
                get {
                    return this.columnInterModal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InvoicedColumn {
                get {
                    return this.columnInvoiced;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UserCreationColumn {
                get {
                    return this.columnUserCreation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UserUpdateColumn {
                get {
                    return this.columnUserUpdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UserOwnerColumn {
                get {
                    return this.columnUserOwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActifColumn {
                get {
                    return this.columnActif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn XrouteColumn {
                get {
                    return this.columnXroute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TripType2Column {
                get {
                    return this.columnTripType2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BaseFreightRateColumn {
                get {
                    return this.columnBaseFreightRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FuelSurchargeColumn {
                get {
                    return this.columnFuelSurcharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StopOver1Column {
                get {
                    return this.columnStopOver1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StopOver2Column {
                get {
                    return this.columnStopOver2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FuelSurchargeRateColumn {
                get {
                    return this.columnFuelSurchargeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AdhocRateColumn {
                get {
                    return this.columnAdhocRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn demurrageColumn {
                get {
                    return this.columndemurrage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DemurageCodeColumn {
                get {
                    return this.columnDemurageCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InvoiceNumberColumn {
                get {
                    return this.columnInvoiceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InvoiceDateColumn {
                get {
                    return this.columnInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InvoicePathColumn {
                get {
                    return this.columnInvoicePath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LineColumn {
                get {
                    return this.columnLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InvoiceEDIColumn {
                get {
                    return this.columnInvoiceEDI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ShipperAccountColumn {
                get {
                    return this.columnShipperAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReroutingSurchargeColumn {
                get {
                    return this.columnReroutingSurcharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WharehousingColumn {
                get {
                    return this.columnWharehousing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RedeliveryColumn {
                get {
                    return this.columnRedelivery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CancellationColumn {
                get {
                    return this.columnCancellation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BillingAccountColumn {
                get {
                    return this.columnBillingAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AdHocSurchargeColumn {
                get {
                    return this.columnAdHocSurcharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DriverDententionAtUnloadingColumn {
                get {
                    return this.columnDriverDententionAtUnloading;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn eShipCoColumn {
                get {
                    return this.columneShipCo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CorridorColumn {
                get {
                    return this.columnCorridor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CoSColumn {
                get {
                    return this.columnCoS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CustomClearanceColumn {
                get {
                    return this.columnCustomClearance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P44ToUploadColumn {
                get {
                    return this.columnP44ToUpload;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P44UploadedColumn {
                get {
                    return this.columnP44Uploaded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P44ShipmentIDColumn {
                get {
                    return this.columnP44ShipmentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P44LastUpdateColumn {
                get {
                    return this.columnP44LastUpdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P44StatusCodeColumn {
                get {
                    return this.columnP44StatusCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P44ReasonCodeColumn {
                get {
                    return this.columnP44ReasonCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P44ReasonDescriptionColumn {
                get {
                    return this.columnP44ReasonDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P44TrackTrailerColumn {
                get {
                    return this.columnP44TrackTrailer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P44TrackingStartedColumn {
                get {
                    return this.columnP44TrackingStarted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P44TrackingCompletedColumn {
                get {
                    return this.columnP44TrackingCompleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P44TrackingErrorColumn {
                get {
                    return this.columnP44TrackingError;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P44UploadErrorColumn {
                get {
                    return this.columnP44UploadError;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P44LatitudeColumn {
                get {
                    return this.columnP44Latitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P44LongitudeColumn {
                get {
                    return this.columnP44Longitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P44CurrentStopColumn {
                get {
                    return this.columnP44CurrentStop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SSMA_TimeStampColumn {
                get {
                    return this.columnSSMA_TimeStamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NewCORow this[int index] {
                get {
                    return ((NewCORow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event NewCORowChangeEventHandler NewCORowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event NewCORowChangeEventHandler NewCORowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event NewCORowChangeEventHandler NewCORowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event NewCORowChangeEventHandler NewCORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddNewCORow(NewCORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NewCORow AddNewCORow(
                        string NewCO, 
                        System.DateTime DateCreation, 
                        System.DateTime DateUpdate, 
                        string IdContractHolder, 
                        string ContractHolderReference, 
                        bool CMR, 
                        float SalesPrice, 
                        float ConversionRate, 
                        string SalesPriceCurrency, 
                        float SalesPriceInCurrency, 
                        string SalesPriceVATCode, 
                        float SalesPriceVATRate, 
                        float SalesPriceVATAmount, 
                        string ContractHolderPaymentTerm, 
                        bool ContractHolderPaymentTermOEM, 
                        string Comment, 
                        float InvoiceInGBP, 
                        string AllRisksInsurance, 
                        string ContractHolderEmail, 
                        string ContractHolderTel, 
                        string ContractHolderMob, 
                        string TrailerNumber, 
                        string TrailerTypeAutorised, 
                        bool InterModal, 
                        bool Invoiced, 
                        string UserCreation, 
                        string UserUpdate, 
                        string UserOwner, 
                        bool Actif, 
                        bool Xroute, 
                        string TripType2, 
                        float BaseFreightRate, 
                        float FuelSurcharge, 
                        string StopOver1, 
                        string StopOver2, 
                        float FuelSurchargeRate, 
                        float AdhocRate, 
                        float demurrage, 
                        string DemurageCode, 
                        int InvoiceNumber, 
                        System.DateTime InvoiceDate, 
                        string InvoicePath, 
                        string Line, 
                        string InvoiceEDI, 
                        string ShipperAccount, 
                        float ReroutingSurcharge, 
                        float Wharehousing, 
                        float Redelivery, 
                        float Cancellation, 
                        string BillingAccount, 
                        float AdHocSurcharge, 
                        float DriverDententionAtUnloading, 
                        short eShipCo, 
                        string Corridor, 
                        bool CoS, 
                        decimal CustomClearance, 
                        bool P44ToUpload, 
                        bool P44Uploaded, 
                        double P44ShipmentID, 
                        System.DateTime P44LastUpdate, 
                        string P44StatusCode, 
                        string P44ReasonCode, 
                        string P44ReasonDescription, 
                        bool P44TrackTrailer, 
                        bool P44TrackingStarted, 
                        bool P44TrackingCompleted, 
                        bool P44TrackingError, 
                        bool P44UploadError, 
                        float P44Latitude, 
                        float P44Longitude, 
                        int P44CurrentStop, 
                        byte[] SSMA_TimeStamp) {
                NewCORow rowNewCORow = ((NewCORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NewCO,
                        DateCreation,
                        DateUpdate,
                        IdContractHolder,
                        ContractHolderReference,
                        CMR,
                        SalesPrice,
                        ConversionRate,
                        SalesPriceCurrency,
                        SalesPriceInCurrency,
                        SalesPriceVATCode,
                        SalesPriceVATRate,
                        SalesPriceVATAmount,
                        ContractHolderPaymentTerm,
                        ContractHolderPaymentTermOEM,
                        Comment,
                        InvoiceInGBP,
                        AllRisksInsurance,
                        ContractHolderEmail,
                        ContractHolderTel,
                        ContractHolderMob,
                        TrailerNumber,
                        TrailerTypeAutorised,
                        InterModal,
                        Invoiced,
                        UserCreation,
                        UserUpdate,
                        UserOwner,
                        Actif,
                        Xroute,
                        TripType2,
                        BaseFreightRate,
                        FuelSurcharge,
                        StopOver1,
                        StopOver2,
                        FuelSurchargeRate,
                        AdhocRate,
                        demurrage,
                        DemurageCode,
                        InvoiceNumber,
                        InvoiceDate,
                        InvoicePath,
                        Line,
                        InvoiceEDI,
                        ShipperAccount,
                        ReroutingSurcharge,
                        Wharehousing,
                        Redelivery,
                        Cancellation,
                        BillingAccount,
                        AdHocSurcharge,
                        DriverDententionAtUnloading,
                        eShipCo,
                        Corridor,
                        CoS,
                        CustomClearance,
                        P44ToUpload,
                        P44Uploaded,
                        P44ShipmentID,
                        P44LastUpdate,
                        P44StatusCode,
                        P44ReasonCode,
                        P44ReasonDescription,
                        P44TrackTrailer,
                        P44TrackingStarted,
                        P44TrackingCompleted,
                        P44TrackingError,
                        P44UploadError,
                        P44Latitude,
                        P44Longitude,
                        P44CurrentStop,
                        SSMA_TimeStamp};
                rowNewCORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNewCORow);
                return rowNewCORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NewCORow FindByIdCO(int IdCO) {
                return ((NewCORow)(this.Rows.Find(new object[] {
                            IdCO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                NewCODataTable cln = ((NewCODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NewCODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnIdCO = base.Columns["IdCO"];
                this.columnNewCO = base.Columns["NewCO"];
                this.columnDateCreation = base.Columns["DateCreation"];
                this.columnDateUpdate = base.Columns["DateUpdate"];
                this.columnIdContractHolder = base.Columns["IdContractHolder"];
                this.columnContractHolderReference = base.Columns["ContractHolderReference"];
                this.columnCMR = base.Columns["CMR"];
                this.columnSalesPrice = base.Columns["SalesPrice"];
                this.columnConversionRate = base.Columns["ConversionRate"];
                this.columnSalesPriceCurrency = base.Columns["SalesPriceCurrency"];
                this.columnSalesPriceInCurrency = base.Columns["SalesPriceInCurrency"];
                this.columnSalesPriceVATCode = base.Columns["SalesPriceVATCode"];
                this.columnSalesPriceVATRate = base.Columns["SalesPriceVATRate"];
                this.columnSalesPriceVATAmount = base.Columns["SalesPriceVATAmount"];
                this.columnContractHolderPaymentTerm = base.Columns["ContractHolderPaymentTerm"];
                this.columnContractHolderPaymentTermOEM = base.Columns["ContractHolderPaymentTermOEM"];
                this.columnComment = base.Columns["Comment"];
                this.columnInvoiceInGBP = base.Columns["InvoiceInGBP"];
                this.columnAllRisksInsurance = base.Columns["AllRisksInsurance"];
                this.columnContractHolderEmail = base.Columns["ContractHolderEmail"];
                this.columnContractHolderTel = base.Columns["ContractHolderTel"];
                this.columnContractHolderMob = base.Columns["ContractHolderMob"];
                this.columnTrailerNumber = base.Columns["TrailerNumber"];
                this.columnTrailerTypeAutorised = base.Columns["TrailerTypeAutorised"];
                this.columnInterModal = base.Columns["InterModal"];
                this.columnInvoiced = base.Columns["Invoiced"];
                this.columnUserCreation = base.Columns["UserCreation"];
                this.columnUserUpdate = base.Columns["UserUpdate"];
                this.columnUserOwner = base.Columns["UserOwner"];
                this.columnActif = base.Columns["Actif"];
                this.columnXroute = base.Columns["Xroute"];
                this.columnTripType2 = base.Columns["TripType2"];
                this.columnBaseFreightRate = base.Columns["BaseFreightRate"];
                this.columnFuelSurcharge = base.Columns["FuelSurcharge"];
                this.columnStopOver1 = base.Columns["StopOver1"];
                this.columnStopOver2 = base.Columns["StopOver2"];
                this.columnFuelSurchargeRate = base.Columns["FuelSurchargeRate"];
                this.columnAdhocRate = base.Columns["AdhocRate"];
                this.columndemurrage = base.Columns["demurrage"];
                this.columnDemurageCode = base.Columns["DemurageCode"];
                this.columnInvoiceNumber = base.Columns["InvoiceNumber"];
                this.columnInvoiceDate = base.Columns["InvoiceDate"];
                this.columnInvoicePath = base.Columns["InvoicePath"];
                this.columnLine = base.Columns["Line"];
                this.columnInvoiceEDI = base.Columns["InvoiceEDI"];
                this.columnShipperAccount = base.Columns["ShipperAccount"];
                this.columnReroutingSurcharge = base.Columns["ReroutingSurcharge"];
                this.columnWharehousing = base.Columns["Wharehousing"];
                this.columnRedelivery = base.Columns["Redelivery"];
                this.columnCancellation = base.Columns["Cancellation"];
                this.columnBillingAccount = base.Columns["BillingAccount"];
                this.columnAdHocSurcharge = base.Columns["AdHocSurcharge"];
                this.columnDriverDententionAtUnloading = base.Columns["DriverDententionAtUnloading"];
                this.columneShipCo = base.Columns["eShipCo"];
                this.columnCorridor = base.Columns["Corridor"];
                this.columnCoS = base.Columns["CoS"];
                this.columnCustomClearance = base.Columns["CustomClearance"];
                this.columnP44ToUpload = base.Columns["P44ToUpload"];
                this.columnP44Uploaded = base.Columns["P44Uploaded"];
                this.columnP44ShipmentID = base.Columns["P44ShipmentID"];
                this.columnP44LastUpdate = base.Columns["P44LastUpdate"];
                this.columnP44StatusCode = base.Columns["P44StatusCode"];
                this.columnP44ReasonCode = base.Columns["P44ReasonCode"];
                this.columnP44ReasonDescription = base.Columns["P44ReasonDescription"];
                this.columnP44TrackTrailer = base.Columns["P44TrackTrailer"];
                this.columnP44TrackingStarted = base.Columns["P44TrackingStarted"];
                this.columnP44TrackingCompleted = base.Columns["P44TrackingCompleted"];
                this.columnP44TrackingError = base.Columns["P44TrackingError"];
                this.columnP44UploadError = base.Columns["P44UploadError"];
                this.columnP44Latitude = base.Columns["P44Latitude"];
                this.columnP44Longitude = base.Columns["P44Longitude"];
                this.columnP44CurrentStop = base.Columns["P44CurrentStop"];
                this.columnSSMA_TimeStamp = base.Columns["SSMA_TimeStamp"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnIdCO = new global::System.Data.DataColumn("IdCO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdCO);
                this.columnNewCO = new global::System.Data.DataColumn("NewCO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewCO);
                this.columnDateCreation = new global::System.Data.DataColumn("DateCreation", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreation);
                this.columnDateUpdate = new global::System.Data.DataColumn("DateUpdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateUpdate);
                this.columnIdContractHolder = new global::System.Data.DataColumn("IdContractHolder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdContractHolder);
                this.columnContractHolderReference = new global::System.Data.DataColumn("ContractHolderReference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractHolderReference);
                this.columnCMR = new global::System.Data.DataColumn("CMR", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMR);
                this.columnSalesPrice = new global::System.Data.DataColumn("SalesPrice", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesPrice);
                this.columnConversionRate = new global::System.Data.DataColumn("ConversionRate", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConversionRate);
                this.columnSalesPriceCurrency = new global::System.Data.DataColumn("SalesPriceCurrency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesPriceCurrency);
                this.columnSalesPriceInCurrency = new global::System.Data.DataColumn("SalesPriceInCurrency", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesPriceInCurrency);
                this.columnSalesPriceVATCode = new global::System.Data.DataColumn("SalesPriceVATCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesPriceVATCode);
                this.columnSalesPriceVATRate = new global::System.Data.DataColumn("SalesPriceVATRate", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesPriceVATRate);
                this.columnSalesPriceVATAmount = new global::System.Data.DataColumn("SalesPriceVATAmount", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesPriceVATAmount);
                this.columnContractHolderPaymentTerm = new global::System.Data.DataColumn("ContractHolderPaymentTerm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractHolderPaymentTerm);
                this.columnContractHolderPaymentTermOEM = new global::System.Data.DataColumn("ContractHolderPaymentTermOEM", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractHolderPaymentTermOEM);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnInvoiceInGBP = new global::System.Data.DataColumn("InvoiceInGBP", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceInGBP);
                this.columnAllRisksInsurance = new global::System.Data.DataColumn("AllRisksInsurance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllRisksInsurance);
                this.columnContractHolderEmail = new global::System.Data.DataColumn("ContractHolderEmail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractHolderEmail);
                this.columnContractHolderTel = new global::System.Data.DataColumn("ContractHolderTel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractHolderTel);
                this.columnContractHolderMob = new global::System.Data.DataColumn("ContractHolderMob", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractHolderMob);
                this.columnTrailerNumber = new global::System.Data.DataColumn("TrailerNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrailerNumber);
                this.columnTrailerTypeAutorised = new global::System.Data.DataColumn("TrailerTypeAutorised", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrailerTypeAutorised);
                this.columnInterModal = new global::System.Data.DataColumn("InterModal", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterModal);
                this.columnInvoiced = new global::System.Data.DataColumn("Invoiced", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiced);
                this.columnUserCreation = new global::System.Data.DataColumn("UserCreation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserCreation);
                this.columnUserUpdate = new global::System.Data.DataColumn("UserUpdate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserUpdate);
                this.columnUserOwner = new global::System.Data.DataColumn("UserOwner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserOwner);
                this.columnActif = new global::System.Data.DataColumn("Actif", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActif);
                this.columnXroute = new global::System.Data.DataColumn("Xroute", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXroute);
                this.columnTripType2 = new global::System.Data.DataColumn("TripType2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTripType2);
                this.columnBaseFreightRate = new global::System.Data.DataColumn("BaseFreightRate", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseFreightRate);
                this.columnFuelSurcharge = new global::System.Data.DataColumn("FuelSurcharge", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuelSurcharge);
                this.columnStopOver1 = new global::System.Data.DataColumn("StopOver1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStopOver1);
                this.columnStopOver2 = new global::System.Data.DataColumn("StopOver2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStopOver2);
                this.columnFuelSurchargeRate = new global::System.Data.DataColumn("FuelSurchargeRate", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuelSurchargeRate);
                this.columnAdhocRate = new global::System.Data.DataColumn("AdhocRate", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdhocRate);
                this.columndemurrage = new global::System.Data.DataColumn("demurrage", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndemurrage);
                this.columnDemurageCode = new global::System.Data.DataColumn("DemurageCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDemurageCode);
                this.columnInvoiceNumber = new global::System.Data.DataColumn("InvoiceNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNumber);
                this.columnInvoiceDate = new global::System.Data.DataColumn("InvoiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceDate);
                this.columnInvoicePath = new global::System.Data.DataColumn("InvoicePath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoicePath);
                this.columnLine = new global::System.Data.DataColumn("Line", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLine);
                this.columnInvoiceEDI = new global::System.Data.DataColumn("InvoiceEDI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceEDI);
                this.columnShipperAccount = new global::System.Data.DataColumn("ShipperAccount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperAccount);
                this.columnReroutingSurcharge = new global::System.Data.DataColumn("ReroutingSurcharge", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReroutingSurcharge);
                this.columnWharehousing = new global::System.Data.DataColumn("Wharehousing", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWharehousing);
                this.columnRedelivery = new global::System.Data.DataColumn("Redelivery", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRedelivery);
                this.columnCancellation = new global::System.Data.DataColumn("Cancellation", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCancellation);
                this.columnBillingAccount = new global::System.Data.DataColumn("BillingAccount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillingAccount);
                this.columnAdHocSurcharge = new global::System.Data.DataColumn("AdHocSurcharge", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdHocSurcharge);
                this.columnDriverDententionAtUnloading = new global::System.Data.DataColumn("DriverDententionAtUnloading", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverDententionAtUnloading);
                this.columneShipCo = new global::System.Data.DataColumn("eShipCo", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneShipCo);
                this.columnCorridor = new global::System.Data.DataColumn("Corridor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCorridor);
                this.columnCoS = new global::System.Data.DataColumn("CoS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoS);
                this.columnCustomClearance = new global::System.Data.DataColumn("CustomClearance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomClearance);
                this.columnP44ToUpload = new global::System.Data.DataColumn("P44ToUpload", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP44ToUpload);
                this.columnP44Uploaded = new global::System.Data.DataColumn("P44Uploaded", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP44Uploaded);
                this.columnP44ShipmentID = new global::System.Data.DataColumn("P44ShipmentID", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP44ShipmentID);
                this.columnP44LastUpdate = new global::System.Data.DataColumn("P44LastUpdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP44LastUpdate);
                this.columnP44StatusCode = new global::System.Data.DataColumn("P44StatusCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP44StatusCode);
                this.columnP44ReasonCode = new global::System.Data.DataColumn("P44ReasonCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP44ReasonCode);
                this.columnP44ReasonDescription = new global::System.Data.DataColumn("P44ReasonDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP44ReasonDescription);
                this.columnP44TrackTrailer = new global::System.Data.DataColumn("P44TrackTrailer", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP44TrackTrailer);
                this.columnP44TrackingStarted = new global::System.Data.DataColumn("P44TrackingStarted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP44TrackingStarted);
                this.columnP44TrackingCompleted = new global::System.Data.DataColumn("P44TrackingCompleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP44TrackingCompleted);
                this.columnP44TrackingError = new global::System.Data.DataColumn("P44TrackingError", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP44TrackingError);
                this.columnP44UploadError = new global::System.Data.DataColumn("P44UploadError", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP44UploadError);
                this.columnP44Latitude = new global::System.Data.DataColumn("P44Latitude", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP44Latitude);
                this.columnP44Longitude = new global::System.Data.DataColumn("P44Longitude", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP44Longitude);
                this.columnP44CurrentStop = new global::System.Data.DataColumn("P44CurrentStop", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP44CurrentStop);
                this.columnSSMA_TimeStamp = new global::System.Data.DataColumn("SSMA_TimeStamp", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSMA_TimeStamp);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIdCO}, true));
                this.columnIdCO.AutoIncrement = true;
                this.columnIdCO.AutoIncrementSeed = -1;
                this.columnIdCO.AutoIncrementStep = -1;
                this.columnIdCO.AllowDBNull = false;
                this.columnIdCO.ReadOnly = true;
                this.columnIdCO.Unique = true;
                this.columnNewCO.AllowDBNull = false;
                this.columnNewCO.MaxLength = 50;
                this.columnIdContractHolder.AllowDBNull = false;
                this.columnIdContractHolder.MaxLength = 6;
                this.columnContractHolderReference.MaxLength = 50;
                this.columnSalesPriceCurrency.MaxLength = 1;
                this.columnSalesPriceVATCode.MaxLength = 3;
                this.columnContractHolderPaymentTerm.MaxLength = 50;
                this.columnComment.MaxLength = 255;
                this.columnAllRisksInsurance.MaxLength = 3;
                this.columnContractHolderEmail.MaxLength = 50;
                this.columnContractHolderTel.MaxLength = 25;
                this.columnContractHolderMob.MaxLength = 25;
                this.columnTrailerNumber.MaxLength = 30;
                this.columnTrailerTypeAutorised.MaxLength = 50;
                this.columnUserCreation.MaxLength = 50;
                this.columnUserUpdate.MaxLength = 50;
                this.columnUserOwner.MaxLength = 50;
                this.columnTripType2.MaxLength = 10;
                this.columnStopOver1.MaxLength = 20;
                this.columnStopOver2.MaxLength = 20;
                this.columnDemurageCode.MaxLength = 20;
                this.columnInvoicePath.MaxLength = 50;
                this.columnLine.MaxLength = 255;
                this.columnInvoiceEDI.MaxLength = 50;
                this.columnShipperAccount.MaxLength = 255;
                this.columnBillingAccount.MaxLength = 30;
                this.columnCorridor.MaxLength = 50;
                this.columnP44StatusCode.MaxLength = 255;
                this.columnP44ReasonCode.MaxLength = 255;
                this.columnP44ReasonDescription.MaxLength = 255;
                this.columnSSMA_TimeStamp.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NewCORow NewNewCORow() {
                return ((NewCORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NewCORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(NewCORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NewCORowChanged != null)) {
                    this.NewCORowChanged(this, new NewCORowChangeEvent(((NewCORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NewCORowChanging != null)) {
                    this.NewCORowChanging(this, new NewCORowChangeEvent(((NewCORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NewCORowDeleted != null)) {
                    this.NewCORowDeleted(this, new NewCORowChangeEvent(((NewCORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NewCORowDeleting != null)) {
                    this.NewCORowDeleting(this, new NewCORowChangeEvent(((NewCORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveNewCORow(NewCORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                axsCODataSet ds = new axsCODataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NewCODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class NewCORow : global::System.Data.DataRow {
            
            private NewCODataTable tableNewCO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal NewCORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNewCO = ((NewCODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int IdCO {
                get {
                    return ((int)(this[this.tableNewCO.IdCOColumn]));
                }
                set {
                    this[this.tableNewCO.IdCOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NewCO {
                get {
                    return ((string)(this[this.tableNewCO.NewCOColumn]));
                }
                set {
                    this[this.tableNewCO.NewCOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DateCreation {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableNewCO.DateCreationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateCreation\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.DateCreationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DateUpdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableNewCO.DateUpdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateUpdate\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.DateUpdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string IdContractHolder {
                get {
                    return ((string)(this[this.tableNewCO.IdContractHolderColumn]));
                }
                set {
                    this[this.tableNewCO.IdContractHolderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ContractHolderReference {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.ContractHolderReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractHolderReference\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.ContractHolderReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool CMR {
                get {
                    try {
                        return ((bool)(this[this.tableNewCO.CMRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMR\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.CMRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float SalesPrice {
                get {
                    try {
                        return ((float)(this[this.tableNewCO.SalesPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesPrice\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.SalesPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float ConversionRate {
                get {
                    try {
                        return ((float)(this[this.tableNewCO.ConversionRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConversionRate\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.ConversionRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SalesPriceCurrency {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.SalesPriceCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesPriceCurrency\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.SalesPriceCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float SalesPriceInCurrency {
                get {
                    try {
                        return ((float)(this[this.tableNewCO.SalesPriceInCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesPriceInCurrency\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.SalesPriceInCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SalesPriceVATCode {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.SalesPriceVATCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesPriceVATCode\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.SalesPriceVATCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float SalesPriceVATRate {
                get {
                    try {
                        return ((float)(this[this.tableNewCO.SalesPriceVATRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesPriceVATRate\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.SalesPriceVATRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float SalesPriceVATAmount {
                get {
                    try {
                        return ((float)(this[this.tableNewCO.SalesPriceVATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesPriceVATAmount\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.SalesPriceVATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ContractHolderPaymentTerm {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.ContractHolderPaymentTermColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractHolderPaymentTerm\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.ContractHolderPaymentTermColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ContractHolderPaymentTermOEM {
                get {
                    try {
                        return ((bool)(this[this.tableNewCO.ContractHolderPaymentTermOEMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractHolderPaymentTermOEM\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.ContractHolderPaymentTermOEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float InvoiceInGBP {
                get {
                    try {
                        return ((float)(this[this.tableNewCO.InvoiceInGBPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceInGBP\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.InvoiceInGBPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AllRisksInsurance {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.AllRisksInsuranceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AllRisksInsurance\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.AllRisksInsuranceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ContractHolderEmail {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.ContractHolderEmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractHolderEmail\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.ContractHolderEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ContractHolderTel {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.ContractHolderTelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractHolderTel\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.ContractHolderTelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ContractHolderMob {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.ContractHolderMobColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractHolderMob\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.ContractHolderMobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TrailerNumber {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.TrailerNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrailerNumber\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.TrailerNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TrailerTypeAutorised {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.TrailerTypeAutorisedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrailerTypeAutorised\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.TrailerTypeAutorisedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool InterModal {
                get {
                    try {
                        return ((bool)(this[this.tableNewCO.InterModalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterModal\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.InterModalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Invoiced {
                get {
                    try {
                        return ((bool)(this[this.tableNewCO.InvoicedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Invoiced\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.InvoicedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UserCreation {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.UserCreationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserCreation\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.UserCreationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UserUpdate {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.UserUpdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserUpdate\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.UserUpdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UserOwner {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.UserOwnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserOwner\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.UserOwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Actif {
                get {
                    try {
                        return ((bool)(this[this.tableNewCO.ActifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Actif\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.ActifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Xroute {
                get {
                    try {
                        return ((bool)(this[this.tableNewCO.XrouteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Xroute\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.XrouteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TripType2 {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.TripType2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TripType2\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.TripType2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float BaseFreightRate {
                get {
                    try {
                        return ((float)(this[this.tableNewCO.BaseFreightRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseFreightRate\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.BaseFreightRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float FuelSurcharge {
                get {
                    try {
                        return ((float)(this[this.tableNewCO.FuelSurchargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FuelSurcharge\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.FuelSurchargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StopOver1 {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.StopOver1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StopOver1\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.StopOver1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StopOver2 {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.StopOver2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StopOver2\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.StopOver2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float FuelSurchargeRate {
                get {
                    try {
                        return ((float)(this[this.tableNewCO.FuelSurchargeRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FuelSurchargeRate\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.FuelSurchargeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float AdhocRate {
                get {
                    try {
                        return ((float)(this[this.tableNewCO.AdhocRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdhocRate\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.AdhocRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float demurrage {
                get {
                    try {
                        return ((float)(this[this.tableNewCO.demurrageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'demurrage\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.demurrageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DemurageCode {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.DemurageCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DemurageCode\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.DemurageCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int InvoiceNumber {
                get {
                    try {
                        return ((int)(this[this.tableNewCO.InvoiceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNumber\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.InvoiceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime InvoiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableNewCO.InvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceDate\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.InvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string InvoicePath {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.InvoicePathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoicePath\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.InvoicePathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Line {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.LineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Line\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.LineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string InvoiceEDI {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.InvoiceEDIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceEDI\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.InvoiceEDIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ShipperAccount {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.ShipperAccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperAccount\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.ShipperAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float ReroutingSurcharge {
                get {
                    try {
                        return ((float)(this[this.tableNewCO.ReroutingSurchargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReroutingSurcharge\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.ReroutingSurchargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float Wharehousing {
                get {
                    try {
                        return ((float)(this[this.tableNewCO.WharehousingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Wharehousing\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.WharehousingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float Redelivery {
                get {
                    try {
                        return ((float)(this[this.tableNewCO.RedeliveryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Redelivery\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.RedeliveryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float Cancellation {
                get {
                    try {
                        return ((float)(this[this.tableNewCO.CancellationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cancellation\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.CancellationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BillingAccount {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.BillingAccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillingAccount\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.BillingAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float AdHocSurcharge {
                get {
                    try {
                        return ((float)(this[this.tableNewCO.AdHocSurchargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdHocSurcharge\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.AdHocSurchargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float DriverDententionAtUnloading {
                get {
                    try {
                        return ((float)(this[this.tableNewCO.DriverDententionAtUnloadingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DriverDententionAtUnloading\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.DriverDententionAtUnloadingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short eShipCo {
                get {
                    try {
                        return ((short)(this[this.tableNewCO.eShipCoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'eShipCo\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.eShipCoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Corridor {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.CorridorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Corridor\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.CorridorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool CoS {
                get {
                    try {
                        return ((bool)(this[this.tableNewCO.CoSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoS\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.CoSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CustomClearance {
                get {
                    try {
                        return ((decimal)(this[this.tableNewCO.CustomClearanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomClearance\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.CustomClearanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool P44ToUpload {
                get {
                    try {
                        return ((bool)(this[this.tableNewCO.P44ToUploadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P44ToUpload\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.P44ToUploadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool P44Uploaded {
                get {
                    try {
                        return ((bool)(this[this.tableNewCO.P44UploadedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P44Uploaded\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.P44UploadedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double P44ShipmentID {
                get {
                    try {
                        return ((double)(this[this.tableNewCO.P44ShipmentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P44ShipmentID\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.P44ShipmentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime P44LastUpdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableNewCO.P44LastUpdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P44LastUpdate\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.P44LastUpdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string P44StatusCode {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.P44StatusCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P44StatusCode\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.P44StatusCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string P44ReasonCode {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.P44ReasonCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P44ReasonCode\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.P44ReasonCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string P44ReasonDescription {
                get {
                    try {
                        return ((string)(this[this.tableNewCO.P44ReasonDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P44ReasonDescription\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.P44ReasonDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool P44TrackTrailer {
                get {
                    try {
                        return ((bool)(this[this.tableNewCO.P44TrackTrailerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P44TrackTrailer\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.P44TrackTrailerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool P44TrackingStarted {
                get {
                    try {
                        return ((bool)(this[this.tableNewCO.P44TrackingStartedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P44TrackingStarted\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.P44TrackingStartedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool P44TrackingCompleted {
                get {
                    try {
                        return ((bool)(this[this.tableNewCO.P44TrackingCompletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P44TrackingCompleted\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.P44TrackingCompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool P44TrackingError {
                get {
                    try {
                        return ((bool)(this[this.tableNewCO.P44TrackingErrorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P44TrackingError\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.P44TrackingErrorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool P44UploadError {
                get {
                    try {
                        return ((bool)(this[this.tableNewCO.P44UploadErrorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P44UploadError\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.P44UploadErrorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float P44Latitude {
                get {
                    try {
                        return ((float)(this[this.tableNewCO.P44LatitudeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P44Latitude\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.P44LatitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float P44Longitude {
                get {
                    try {
                        return ((float)(this[this.tableNewCO.P44LongitudeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P44Longitude\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.P44LongitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int P44CurrentStop {
                get {
                    try {
                        return ((int)(this[this.tableNewCO.P44CurrentStopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P44CurrentStop\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.P44CurrentStopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte[] SSMA_TimeStamp {
                get {
                    try {
                        return ((byte[])(this[this.tableNewCO.SSMA_TimeStampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SSMA_TimeStamp\' in table \'NewCO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNewCO.SSMA_TimeStampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDateCreationNull() {
                return this.IsNull(this.tableNewCO.DateCreationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDateCreationNull() {
                this[this.tableNewCO.DateCreationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDateUpdateNull() {
                return this.IsNull(this.tableNewCO.DateUpdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDateUpdateNull() {
                this[this.tableNewCO.DateUpdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsContractHolderReferenceNull() {
                return this.IsNull(this.tableNewCO.ContractHolderReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetContractHolderReferenceNull() {
                this[this.tableNewCO.ContractHolderReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCMRNull() {
                return this.IsNull(this.tableNewCO.CMRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCMRNull() {
                this[this.tableNewCO.CMRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSalesPriceNull() {
                return this.IsNull(this.tableNewCO.SalesPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSalesPriceNull() {
                this[this.tableNewCO.SalesPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsConversionRateNull() {
                return this.IsNull(this.tableNewCO.ConversionRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetConversionRateNull() {
                this[this.tableNewCO.ConversionRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSalesPriceCurrencyNull() {
                return this.IsNull(this.tableNewCO.SalesPriceCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSalesPriceCurrencyNull() {
                this[this.tableNewCO.SalesPriceCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSalesPriceInCurrencyNull() {
                return this.IsNull(this.tableNewCO.SalesPriceInCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSalesPriceInCurrencyNull() {
                this[this.tableNewCO.SalesPriceInCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSalesPriceVATCodeNull() {
                return this.IsNull(this.tableNewCO.SalesPriceVATCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSalesPriceVATCodeNull() {
                this[this.tableNewCO.SalesPriceVATCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSalesPriceVATRateNull() {
                return this.IsNull(this.tableNewCO.SalesPriceVATRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSalesPriceVATRateNull() {
                this[this.tableNewCO.SalesPriceVATRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSalesPriceVATAmountNull() {
                return this.IsNull(this.tableNewCO.SalesPriceVATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSalesPriceVATAmountNull() {
                this[this.tableNewCO.SalesPriceVATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsContractHolderPaymentTermNull() {
                return this.IsNull(this.tableNewCO.ContractHolderPaymentTermColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetContractHolderPaymentTermNull() {
                this[this.tableNewCO.ContractHolderPaymentTermColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsContractHolderPaymentTermOEMNull() {
                return this.IsNull(this.tableNewCO.ContractHolderPaymentTermOEMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetContractHolderPaymentTermOEMNull() {
                this[this.tableNewCO.ContractHolderPaymentTermOEMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCommentNull() {
                return this.IsNull(this.tableNewCO.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCommentNull() {
                this[this.tableNewCO.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInvoiceInGBPNull() {
                return this.IsNull(this.tableNewCO.InvoiceInGBPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInvoiceInGBPNull() {
                this[this.tableNewCO.InvoiceInGBPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAllRisksInsuranceNull() {
                return this.IsNull(this.tableNewCO.AllRisksInsuranceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAllRisksInsuranceNull() {
                this[this.tableNewCO.AllRisksInsuranceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsContractHolderEmailNull() {
                return this.IsNull(this.tableNewCO.ContractHolderEmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetContractHolderEmailNull() {
                this[this.tableNewCO.ContractHolderEmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsContractHolderTelNull() {
                return this.IsNull(this.tableNewCO.ContractHolderTelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetContractHolderTelNull() {
                this[this.tableNewCO.ContractHolderTelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsContractHolderMobNull() {
                return this.IsNull(this.tableNewCO.ContractHolderMobColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetContractHolderMobNull() {
                this[this.tableNewCO.ContractHolderMobColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTrailerNumberNull() {
                return this.IsNull(this.tableNewCO.TrailerNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTrailerNumberNull() {
                this[this.tableNewCO.TrailerNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTrailerTypeAutorisedNull() {
                return this.IsNull(this.tableNewCO.TrailerTypeAutorisedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTrailerTypeAutorisedNull() {
                this[this.tableNewCO.TrailerTypeAutorisedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInterModalNull() {
                return this.IsNull(this.tableNewCO.InterModalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInterModalNull() {
                this[this.tableNewCO.InterModalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInvoicedNull() {
                return this.IsNull(this.tableNewCO.InvoicedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInvoicedNull() {
                this[this.tableNewCO.InvoicedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUserCreationNull() {
                return this.IsNull(this.tableNewCO.UserCreationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUserCreationNull() {
                this[this.tableNewCO.UserCreationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUserUpdateNull() {
                return this.IsNull(this.tableNewCO.UserUpdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUserUpdateNull() {
                this[this.tableNewCO.UserUpdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUserOwnerNull() {
                return this.IsNull(this.tableNewCO.UserOwnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUserOwnerNull() {
                this[this.tableNewCO.UserOwnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsActifNull() {
                return this.IsNull(this.tableNewCO.ActifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetActifNull() {
                this[this.tableNewCO.ActifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsXrouteNull() {
                return this.IsNull(this.tableNewCO.XrouteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetXrouteNull() {
                this[this.tableNewCO.XrouteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTripType2Null() {
                return this.IsNull(this.tableNewCO.TripType2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTripType2Null() {
                this[this.tableNewCO.TripType2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBaseFreightRateNull() {
                return this.IsNull(this.tableNewCO.BaseFreightRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBaseFreightRateNull() {
                this[this.tableNewCO.BaseFreightRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFuelSurchargeNull() {
                return this.IsNull(this.tableNewCO.FuelSurchargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFuelSurchargeNull() {
                this[this.tableNewCO.FuelSurchargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStopOver1Null() {
                return this.IsNull(this.tableNewCO.StopOver1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStopOver1Null() {
                this[this.tableNewCO.StopOver1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStopOver2Null() {
                return this.IsNull(this.tableNewCO.StopOver2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStopOver2Null() {
                this[this.tableNewCO.StopOver2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFuelSurchargeRateNull() {
                return this.IsNull(this.tableNewCO.FuelSurchargeRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFuelSurchargeRateNull() {
                this[this.tableNewCO.FuelSurchargeRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAdhocRateNull() {
                return this.IsNull(this.tableNewCO.AdhocRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAdhocRateNull() {
                this[this.tableNewCO.AdhocRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsdemurrageNull() {
                return this.IsNull(this.tableNewCO.demurrageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetdemurrageNull() {
                this[this.tableNewCO.demurrageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDemurageCodeNull() {
                return this.IsNull(this.tableNewCO.DemurageCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDemurageCodeNull() {
                this[this.tableNewCO.DemurageCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInvoiceNumberNull() {
                return this.IsNull(this.tableNewCO.InvoiceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInvoiceNumberNull() {
                this[this.tableNewCO.InvoiceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInvoiceDateNull() {
                return this.IsNull(this.tableNewCO.InvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInvoiceDateNull() {
                this[this.tableNewCO.InvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInvoicePathNull() {
                return this.IsNull(this.tableNewCO.InvoicePathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInvoicePathNull() {
                this[this.tableNewCO.InvoicePathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLineNull() {
                return this.IsNull(this.tableNewCO.LineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLineNull() {
                this[this.tableNewCO.LineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInvoiceEDINull() {
                return this.IsNull(this.tableNewCO.InvoiceEDIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInvoiceEDINull() {
                this[this.tableNewCO.InvoiceEDIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsShipperAccountNull() {
                return this.IsNull(this.tableNewCO.ShipperAccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetShipperAccountNull() {
                this[this.tableNewCO.ShipperAccountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsReroutingSurchargeNull() {
                return this.IsNull(this.tableNewCO.ReroutingSurchargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetReroutingSurchargeNull() {
                this[this.tableNewCO.ReroutingSurchargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsWharehousingNull() {
                return this.IsNull(this.tableNewCO.WharehousingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetWharehousingNull() {
                this[this.tableNewCO.WharehousingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRedeliveryNull() {
                return this.IsNull(this.tableNewCO.RedeliveryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRedeliveryNull() {
                this[this.tableNewCO.RedeliveryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCancellationNull() {
                return this.IsNull(this.tableNewCO.CancellationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCancellationNull() {
                this[this.tableNewCO.CancellationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBillingAccountNull() {
                return this.IsNull(this.tableNewCO.BillingAccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBillingAccountNull() {
                this[this.tableNewCO.BillingAccountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAdHocSurchargeNull() {
                return this.IsNull(this.tableNewCO.AdHocSurchargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAdHocSurchargeNull() {
                this[this.tableNewCO.AdHocSurchargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDriverDententionAtUnloadingNull() {
                return this.IsNull(this.tableNewCO.DriverDententionAtUnloadingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDriverDententionAtUnloadingNull() {
                this[this.tableNewCO.DriverDententionAtUnloadingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IseShipCoNull() {
                return this.IsNull(this.tableNewCO.eShipCoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SeteShipCoNull() {
                this[this.tableNewCO.eShipCoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCorridorNull() {
                return this.IsNull(this.tableNewCO.CorridorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCorridorNull() {
                this[this.tableNewCO.CorridorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCoSNull() {
                return this.IsNull(this.tableNewCO.CoSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCoSNull() {
                this[this.tableNewCO.CoSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCustomClearanceNull() {
                return this.IsNull(this.tableNewCO.CustomClearanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCustomClearanceNull() {
                this[this.tableNewCO.CustomClearanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsP44ToUploadNull() {
                return this.IsNull(this.tableNewCO.P44ToUploadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetP44ToUploadNull() {
                this[this.tableNewCO.P44ToUploadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsP44UploadedNull() {
                return this.IsNull(this.tableNewCO.P44UploadedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetP44UploadedNull() {
                this[this.tableNewCO.P44UploadedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsP44ShipmentIDNull() {
                return this.IsNull(this.tableNewCO.P44ShipmentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetP44ShipmentIDNull() {
                this[this.tableNewCO.P44ShipmentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsP44LastUpdateNull() {
                return this.IsNull(this.tableNewCO.P44LastUpdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetP44LastUpdateNull() {
                this[this.tableNewCO.P44LastUpdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsP44StatusCodeNull() {
                return this.IsNull(this.tableNewCO.P44StatusCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetP44StatusCodeNull() {
                this[this.tableNewCO.P44StatusCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsP44ReasonCodeNull() {
                return this.IsNull(this.tableNewCO.P44ReasonCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetP44ReasonCodeNull() {
                this[this.tableNewCO.P44ReasonCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsP44ReasonDescriptionNull() {
                return this.IsNull(this.tableNewCO.P44ReasonDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetP44ReasonDescriptionNull() {
                this[this.tableNewCO.P44ReasonDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsP44TrackTrailerNull() {
                return this.IsNull(this.tableNewCO.P44TrackTrailerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetP44TrackTrailerNull() {
                this[this.tableNewCO.P44TrackTrailerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsP44TrackingStartedNull() {
                return this.IsNull(this.tableNewCO.P44TrackingStartedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetP44TrackingStartedNull() {
                this[this.tableNewCO.P44TrackingStartedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsP44TrackingCompletedNull() {
                return this.IsNull(this.tableNewCO.P44TrackingCompletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetP44TrackingCompletedNull() {
                this[this.tableNewCO.P44TrackingCompletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsP44TrackingErrorNull() {
                return this.IsNull(this.tableNewCO.P44TrackingErrorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetP44TrackingErrorNull() {
                this[this.tableNewCO.P44TrackingErrorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsP44UploadErrorNull() {
                return this.IsNull(this.tableNewCO.P44UploadErrorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetP44UploadErrorNull() {
                this[this.tableNewCO.P44UploadErrorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsP44LatitudeNull() {
                return this.IsNull(this.tableNewCO.P44LatitudeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetP44LatitudeNull() {
                this[this.tableNewCO.P44LatitudeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsP44LongitudeNull() {
                return this.IsNull(this.tableNewCO.P44LongitudeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetP44LongitudeNull() {
                this[this.tableNewCO.P44LongitudeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsP44CurrentStopNull() {
                return this.IsNull(this.tableNewCO.P44CurrentStopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetP44CurrentStopNull() {
                this[this.tableNewCO.P44CurrentStopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSSMA_TimeStampNull() {
                return this.IsNull(this.tableNewCO.SSMA_TimeStampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSSMA_TimeStampNull() {
                this[this.tableNewCO.SSMA_TimeStampColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class NewCORowChangeEvent : global::System.EventArgs {
            
            private NewCORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NewCORowChangeEvent(NewCORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NewCORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Efret_TMS.axsCODataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NewCOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public NewCOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NewCO";
            tableMapping.ColumnMappings.Add("IdCO", "IdCO");
            tableMapping.ColumnMappings.Add("NewCO", "NewCO");
            tableMapping.ColumnMappings.Add("DateCreation", "DateCreation");
            tableMapping.ColumnMappings.Add("DateUpdate", "DateUpdate");
            tableMapping.ColumnMappings.Add("IdContractHolder", "IdContractHolder");
            tableMapping.ColumnMappings.Add("ContractHolderReference", "ContractHolderReference");
            tableMapping.ColumnMappings.Add("CMR", "CMR");
            tableMapping.ColumnMappings.Add("SalesPrice", "SalesPrice");
            tableMapping.ColumnMappings.Add("ConversionRate", "ConversionRate");
            tableMapping.ColumnMappings.Add("SalesPriceCurrency", "SalesPriceCurrency");
            tableMapping.ColumnMappings.Add("SalesPriceInCurrency", "SalesPriceInCurrency");
            tableMapping.ColumnMappings.Add("SalesPriceVATCode", "SalesPriceVATCode");
            tableMapping.ColumnMappings.Add("SalesPriceVATRate", "SalesPriceVATRate");
            tableMapping.ColumnMappings.Add("SalesPriceVATAmount", "SalesPriceVATAmount");
            tableMapping.ColumnMappings.Add("ContractHolderPaymentTerm", "ContractHolderPaymentTerm");
            tableMapping.ColumnMappings.Add("ContractHolderPaymentTermOEM", "ContractHolderPaymentTermOEM");
            tableMapping.ColumnMappings.Add("Comment", "Comment");
            tableMapping.ColumnMappings.Add("InvoiceInGBP", "InvoiceInGBP");
            tableMapping.ColumnMappings.Add("AllRisksInsurance", "AllRisksInsurance");
            tableMapping.ColumnMappings.Add("ContractHolderEmail", "ContractHolderEmail");
            tableMapping.ColumnMappings.Add("ContractHolderTel", "ContractHolderTel");
            tableMapping.ColumnMappings.Add("ContractHolderMob", "ContractHolderMob");
            tableMapping.ColumnMappings.Add("TrailerNumber", "TrailerNumber");
            tableMapping.ColumnMappings.Add("TrailerTypeAutorised", "TrailerTypeAutorised");
            tableMapping.ColumnMappings.Add("InterModal", "InterModal");
            tableMapping.ColumnMappings.Add("Invoiced", "Invoiced");
            tableMapping.ColumnMappings.Add("UserCreation", "UserCreation");
            tableMapping.ColumnMappings.Add("UserUpdate", "UserUpdate");
            tableMapping.ColumnMappings.Add("UserOwner", "UserOwner");
            tableMapping.ColumnMappings.Add("Actif", "Actif");
            tableMapping.ColumnMappings.Add("Xroute", "Xroute");
            tableMapping.ColumnMappings.Add("TripType2", "TripType2");
            tableMapping.ColumnMappings.Add("BaseFreightRate", "BaseFreightRate");
            tableMapping.ColumnMappings.Add("FuelSurcharge", "FuelSurcharge");
            tableMapping.ColumnMappings.Add("StopOver1", "StopOver1");
            tableMapping.ColumnMappings.Add("StopOver2", "StopOver2");
            tableMapping.ColumnMappings.Add("FuelSurchargeRate", "FuelSurchargeRate");
            tableMapping.ColumnMappings.Add("AdhocRate", "AdhocRate");
            tableMapping.ColumnMappings.Add("demurrage", "demurrage");
            tableMapping.ColumnMappings.Add("DemurageCode", "DemurageCode");
            tableMapping.ColumnMappings.Add("InvoiceNumber", "InvoiceNumber");
            tableMapping.ColumnMappings.Add("InvoiceDate", "InvoiceDate");
            tableMapping.ColumnMappings.Add("InvoicePath", "InvoicePath");
            tableMapping.ColumnMappings.Add("Line", "Line");
            tableMapping.ColumnMappings.Add("InvoiceEDI", "InvoiceEDI");
            tableMapping.ColumnMappings.Add("ShipperAccount", "ShipperAccount");
            tableMapping.ColumnMappings.Add("ReroutingSurcharge", "ReroutingSurcharge");
            tableMapping.ColumnMappings.Add("Wharehousing", "Wharehousing");
            tableMapping.ColumnMappings.Add("Redelivery", "Redelivery");
            tableMapping.ColumnMappings.Add("Cancellation", "Cancellation");
            tableMapping.ColumnMappings.Add("BillingAccount", "BillingAccount");
            tableMapping.ColumnMappings.Add("AdHocSurcharge", "AdHocSurcharge");
            tableMapping.ColumnMappings.Add("DriverDententionAtUnloading", "DriverDententionAtUnloading");
            tableMapping.ColumnMappings.Add("eShipCo", "eShipCo");
            tableMapping.ColumnMappings.Add("Corridor", "Corridor");
            tableMapping.ColumnMappings.Add("CoS", "CoS");
            tableMapping.ColumnMappings.Add("CustomClearance", "CustomClearance");
            tableMapping.ColumnMappings.Add("P44ToUpload", "P44ToUpload");
            tableMapping.ColumnMappings.Add("P44Uploaded", "P44Uploaded");
            tableMapping.ColumnMappings.Add("P44ShipmentID", "P44ShipmentID");
            tableMapping.ColumnMappings.Add("P44LastUpdate", "P44LastUpdate");
            tableMapping.ColumnMappings.Add("P44StatusCode", "P44StatusCode");
            tableMapping.ColumnMappings.Add("P44ReasonCode", "P44ReasonCode");
            tableMapping.ColumnMappings.Add("P44ReasonDescription", "P44ReasonDescription");
            tableMapping.ColumnMappings.Add("P44TrackTrailer", "P44TrackTrailer");
            tableMapping.ColumnMappings.Add("P44TrackingStarted", "P44TrackingStarted");
            tableMapping.ColumnMappings.Add("P44TrackingCompleted", "P44TrackingCompleted");
            tableMapping.ColumnMappings.Add("P44TrackingError", "P44TrackingError");
            tableMapping.ColumnMappings.Add("P44UploadError", "P44UploadError");
            tableMapping.ColumnMappings.Add("P44Latitude", "P44Latitude");
            tableMapping.ColumnMappings.Add("P44Longitude", "P44Longitude");
            tableMapping.ColumnMappings.Add("P44CurrentStop", "P44CurrentStop");
            tableMapping.ColumnMappings.Add("SSMA_TimeStamp", "SSMA_TimeStamp");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[NewCO] WHERE (([IdCO] = @Original_IdCO) AND ([SSMA_TimeStamp] " +
                "= @Original_SSMA_TimeStamp))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdCO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdCO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSMA_TimeStamp", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSMA_TimeStamp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[NewCO] ([NewCO], [DateCreation], [DateUpdate], [IdContractHold" +
                "er], [ContractHolderReference], [CMR], [SalesPrice], [ConversionRate], [SalesPri" +
                "ceCurrency], [SalesPriceInCurrency], [SalesPriceVATCode], [SalesPriceVATRate], [" +
                "SalesPriceVATAmount], [ContractHolderPaymentTerm], [ContractHolderPaymentTermOEM" +
                "], [Comment], [InvoiceInGBP], [AllRisksInsurance], [ContractHolderEmail], [Contr" +
                "actHolderTel], [ContractHolderMob], [TrailerNumber], [TrailerTypeAutorised], [In" +
                "terModal], [Invoiced], [UserCreation], [UserUpdate], [UserOwner], [Actif], [Xrou" +
                "te], [TripType2], [BaseFreightRate], [FuelSurcharge], [StopOver1], [StopOver2], " +
                "[FuelSurchargeRate], [AdhocRate], [demurrage], [DemurageCode], [InvoiceNumber], " +
                "[InvoiceDate], [InvoicePath], [Line], [InvoiceEDI], [ShipperAccount], [Rerouting" +
                "Surcharge], [Wharehousing], [Redelivery], [Cancellation], [BillingAccount], [AdH" +
                "ocSurcharge], [DriverDententionAtUnloading], [eShipCo], [Corridor], [CoS], [Cust" +
                "omClearance], [P44ToUpload], [P44Uploaded], [P44ShipmentID], [P44LastUpdate], [P" +
                "44StatusCode], [P44ReasonCode], [P44ReasonDescription], [P44TrackTrailer], [P44T" +
                "rackingStarted], [P44TrackingCompleted], [P44TrackingError], [P44UploadError], [" +
                "P44Latitude], [P44Longitude], [P44CurrentStop]) VALUES (@NewCO, @DateCreation, @" +
                "DateUpdate, @IdContractHolder, @ContractHolderReference, @CMR, @SalesPrice, @Con" +
                "versionRate, @SalesPriceCurrency, @SalesPriceInCurrency, @SalesPriceVATCode, @Sa" +
                "lesPriceVATRate, @SalesPriceVATAmount, @ContractHolderPaymentTerm, @ContractHold" +
                "erPaymentTermOEM, @Comment, @InvoiceInGBP, @AllRisksInsurance, @ContractHolderEm" +
                "ail, @ContractHolderTel, @ContractHolderMob, @TrailerNumber, @TrailerTypeAutoris" +
                "ed, @InterModal, @Invoiced, @UserCreation, @UserUpdate, @UserOwner, @Actif, @Xro" +
                "ute, @TripType2, @BaseFreightRate, @FuelSurcharge, @StopOver1, @StopOver2, @Fuel" +
                "SurchargeRate, @AdhocRate, @demurrage, @DemurageCode, @InvoiceNumber, @InvoiceDa" +
                "te, @InvoicePath, @Line, @InvoiceEDI, @ShipperAccount, @ReroutingSurcharge, @Wha" +
                "rehousing, @Redelivery, @Cancellation, @BillingAccount, @AdHocSurcharge, @Driver" +
                "DententionAtUnloading, @eShipCo, @Corridor, @CoS, @CustomClearance, @P44ToUpload" +
                ", @P44Uploaded, @P44ShipmentID, @P44LastUpdate, @P44StatusCode, @P44ReasonCode, " +
                "@P44ReasonDescription, @P44TrackTrailer, @P44TrackingStarted, @P44TrackingComple" +
                "ted, @P44TrackingError, @P44UploadError, @P44Latitude, @P44Longitude, @P44Curren" +
                "tStop);\r\nSELECT IdCO, NewCO, DateCreation, DateUpdate, IdContractHolder, Contrac" +
                "tHolderReference, CMR, SalesPrice, ConversionRate, SalesPriceCurrency, SalesPric" +
                "eInCurrency, SalesPriceVATCode, SalesPriceVATRate, SalesPriceVATAmount, Contract" +
                "HolderPaymentTerm, ContractHolderPaymentTermOEM, Comment, InvoiceInGBP, AllRisks" +
                "Insurance, ContractHolderEmail, ContractHolderTel, ContractHolderMob, TrailerNum" +
                "ber, TrailerTypeAutorised, InterModal, Invoiced, UserCreation, UserUpdate, UserO" +
                "wner, Actif, Xroute, TripType2, BaseFreightRate, FuelSurcharge, StopOver1, StopO" +
                "ver2, FuelSurchargeRate, AdhocRate, demurrage, DemurageCode, InvoiceNumber, Invo" +
                "iceDate, InvoicePath, Line, InvoiceEDI, ShipperAccount, ReroutingSurcharge, Whar" +
                "ehousing, Redelivery, Cancellation, BillingAccount, AdHocSurcharge, DriverDenten" +
                "tionAtUnloading, eShipCo, Corridor, CoS, CustomClearance, P44ToUpload, P44Upload" +
                "ed, P44ShipmentID, P44LastUpdate, P44StatusCode, P44ReasonCode, P44ReasonDescrip" +
                "tion, P44TrackTrailer, P44TrackingStarted, P44TrackingCompleted, P44TrackingErro" +
                "r, P44UploadError, P44Latitude, P44Longitude, P44CurrentStop, SSMA_TimeStamp FRO" +
                "M NewCO WHERE (IdCO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewCO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NewCO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateCreation", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateCreation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateUpdate", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateUpdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdContractHolder", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdContractHolder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractHolderReference", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractHolderReference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMR", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesPrice", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConversionRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConversionRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesPriceCurrency", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesPriceCurrency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesPriceInCurrency", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesPriceInCurrency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesPriceVATCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesPriceVATCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesPriceVATRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesPriceVATRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesPriceVATAmount", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesPriceVATAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractHolderPaymentTerm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractHolderPaymentTerm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractHolderPaymentTermOEM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractHolderPaymentTermOEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceInGBP", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceInGBP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllRisksInsurance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllRisksInsurance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractHolderEmail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractHolderEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractHolderTel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractHolderTel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractHolderMob", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractHolderMob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrailerNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrailerNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrailerTypeAutorised", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrailerTypeAutorised", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InterModal", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InterModal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Invoiced", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Invoiced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserCreation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserCreation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserUpdate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserUpdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserOwner", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserOwner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Actif", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Actif", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Xroute", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Xroute", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TripType2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TripType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BaseFreightRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseFreightRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FuelSurcharge", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurcharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StopOver1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StopOver1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StopOver2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StopOver2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FuelSurchargeRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurchargeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdhocRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdhocRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@demurrage", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "demurrage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DemurageCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DemurageCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceDate", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoicePath", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoicePath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Line", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Line", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceEDI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceEDI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipperAccount", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipperAccount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReroutingSurcharge", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReroutingSurcharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wharehousing", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wharehousing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Redelivery", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Redelivery", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cancellation", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cancellation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillingAccount", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillingAccount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdHocSurcharge", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdHocSurcharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriverDententionAtUnloading", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriverDententionAtUnloading", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@eShipCo", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "eShipCo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Corridor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Corridor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CoS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomClearance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomClearance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44ToUpload", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44ToUpload", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44Uploaded", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44Uploaded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44ShipmentID", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44ShipmentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44LastUpdate", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44LastUpdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44StatusCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44StatusCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44ReasonCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44ReasonCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44ReasonDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44ReasonDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44TrackTrailer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44TrackTrailer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44TrackingStarted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44TrackingStarted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44TrackingCompleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44TrackingCompleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44TrackingError", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44TrackingError", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44UploadError", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44UploadError", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44Latitude", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44Latitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44Longitude", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44Longitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44CurrentStop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44CurrentStop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[NewCO] SET [NewCO] = @NewCO, [DateCreation] = @DateCreation, [DateU" +
                "pdate] = @DateUpdate, [IdContractHolder] = @IdContractHolder, [ContractHolderRef" +
                "erence] = @ContractHolderReference, [CMR] = @CMR, [SalesPrice] = @SalesPrice, [C" +
                "onversionRate] = @ConversionRate, [SalesPriceCurrency] = @SalesPriceCurrency, [S" +
                "alesPriceInCurrency] = @SalesPriceInCurrency, [SalesPriceVATCode] = @SalesPriceV" +
                "ATCode, [SalesPriceVATRate] = @SalesPriceVATRate, [SalesPriceVATAmount] = @Sales" +
                "PriceVATAmount, [ContractHolderPaymentTerm] = @ContractHolderPaymentTerm, [Contr" +
                "actHolderPaymentTermOEM] = @ContractHolderPaymentTermOEM, [Comment] = @Comment, " +
                "[InvoiceInGBP] = @InvoiceInGBP, [AllRisksInsurance] = @AllRisksInsurance, [Contr" +
                "actHolderEmail] = @ContractHolderEmail, [ContractHolderTel] = @ContractHolderTel" +
                ", [ContractHolderMob] = @ContractHolderMob, [TrailerNumber] = @TrailerNumber, [T" +
                "railerTypeAutorised] = @TrailerTypeAutorised, [InterModal] = @InterModal, [Invoi" +
                "ced] = @Invoiced, [UserCreation] = @UserCreation, [UserUpdate] = @UserUpdate, [U" +
                "serOwner] = @UserOwner, [Actif] = @Actif, [Xroute] = @Xroute, [TripType2] = @Tri" +
                "pType2, [BaseFreightRate] = @BaseFreightRate, [FuelSurcharge] = @FuelSurcharge, " +
                "[StopOver1] = @StopOver1, [StopOver2] = @StopOver2, [FuelSurchargeRate] = @FuelS" +
                "urchargeRate, [AdhocRate] = @AdhocRate, [demurrage] = @demurrage, [DemurageCode]" +
                " = @DemurageCode, [InvoiceNumber] = @InvoiceNumber, [InvoiceDate] = @InvoiceDate" +
                ", [InvoicePath] = @InvoicePath, [Line] = @Line, [InvoiceEDI] = @InvoiceEDI, [Shi" +
                "pperAccount] = @ShipperAccount, [ReroutingSurcharge] = @ReroutingSurcharge, [Wha" +
                "rehousing] = @Wharehousing, [Redelivery] = @Redelivery, [Cancellation] = @Cancel" +
                "lation, [BillingAccount] = @BillingAccount, [AdHocSurcharge] = @AdHocSurcharge, " +
                "[DriverDententionAtUnloading] = @DriverDententionAtUnloading, [eShipCo] = @eShip" +
                "Co, [Corridor] = @Corridor, [CoS] = @CoS, [CustomClearance] = @CustomClearance, " +
                "[P44ToUpload] = @P44ToUpload, [P44Uploaded] = @P44Uploaded, [P44ShipmentID] = @P" +
                "44ShipmentID, [P44LastUpdate] = @P44LastUpdate, [P44StatusCode] = @P44StatusCode" +
                ", [P44ReasonCode] = @P44ReasonCode, [P44ReasonDescription] = @P44ReasonDescripti" +
                "on, [P44TrackTrailer] = @P44TrackTrailer, [P44TrackingStarted] = @P44TrackingSta" +
                "rted, [P44TrackingCompleted] = @P44TrackingCompleted, [P44TrackingError] = @P44T" +
                "rackingError, [P44UploadError] = @P44UploadError, [P44Latitude] = @P44Latitude, " +
                "[P44Longitude] = @P44Longitude, [P44CurrentStop] = @P44CurrentStop WHERE (([IdCO" +
                "] = @Original_IdCO) AND ([SSMA_TimeStamp] = @Original_SSMA_TimeStamp));\r\nSELECT " +
                "IdCO, NewCO, DateCreation, DateUpdate, IdContractHolder, ContractHolderReference" +
                ", CMR, SalesPrice, ConversionRate, SalesPriceCurrency, SalesPriceInCurrency, Sal" +
                "esPriceVATCode, SalesPriceVATRate, SalesPriceVATAmount, ContractHolderPaymentTer" +
                "m, ContractHolderPaymentTermOEM, Comment, InvoiceInGBP, AllRisksInsurance, Contr" +
                "actHolderEmail, ContractHolderTel, ContractHolderMob, TrailerNumber, TrailerType" +
                "Autorised, InterModal, Invoiced, UserCreation, UserUpdate, UserOwner, Actif, Xro" +
                "ute, TripType2, BaseFreightRate, FuelSurcharge, StopOver1, StopOver2, FuelSurcha" +
                "rgeRate, AdhocRate, demurrage, DemurageCode, InvoiceNumber, InvoiceDate, Invoice" +
                "Path, Line, InvoiceEDI, ShipperAccount, ReroutingSurcharge, Wharehousing, Redeli" +
                "very, Cancellation, BillingAccount, AdHocSurcharge, DriverDententionAtUnloading," +
                " eShipCo, Corridor, CoS, CustomClearance, P44ToUpload, P44Uploaded, P44ShipmentI" +
                "D, P44LastUpdate, P44StatusCode, P44ReasonCode, P44ReasonDescription, P44TrackTr" +
                "ailer, P44TrackingStarted, P44TrackingCompleted, P44TrackingError, P44UploadErro" +
                "r, P44Latitude, P44Longitude, P44CurrentStop, SSMA_TimeStamp FROM NewCO WHERE (I" +
                "dCO = @IdCO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NewCO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NewCO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateCreation", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateCreation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateUpdate", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateUpdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdContractHolder", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdContractHolder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractHolderReference", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractHolderReference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CMR", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CMR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesPrice", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConversionRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConversionRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesPriceCurrency", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesPriceCurrency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesPriceInCurrency", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesPriceInCurrency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesPriceVATCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesPriceVATCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesPriceVATRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesPriceVATRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesPriceVATAmount", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalesPriceVATAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractHolderPaymentTerm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractHolderPaymentTerm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractHolderPaymentTermOEM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractHolderPaymentTermOEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceInGBP", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceInGBP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllRisksInsurance", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllRisksInsurance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractHolderEmail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractHolderEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractHolderTel", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractHolderTel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractHolderMob", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractHolderMob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrailerNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrailerNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrailerTypeAutorised", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrailerTypeAutorised", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InterModal", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InterModal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Invoiced", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Invoiced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserCreation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserCreation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserUpdate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserUpdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserOwner", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserOwner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Actif", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Actif", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Xroute", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Xroute", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TripType2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TripType2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BaseFreightRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseFreightRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FuelSurcharge", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurcharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StopOver1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StopOver1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StopOver2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StopOver2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FuelSurchargeRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FuelSurchargeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdhocRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdhocRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@demurrage", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "demurrage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DemurageCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DemurageCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceDate", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoicePath", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoicePath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Line", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Line", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceEDI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceEDI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipperAccount", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipperAccount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReroutingSurcharge", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReroutingSurcharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wharehousing", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wharehousing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Redelivery", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Redelivery", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cancellation", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cancellation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillingAccount", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillingAccount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdHocSurcharge", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdHocSurcharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriverDententionAtUnloading", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriverDententionAtUnloading", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@eShipCo", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "eShipCo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Corridor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Corridor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CoS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomClearance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomClearance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44ToUpload", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44ToUpload", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44Uploaded", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44Uploaded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44ShipmentID", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44ShipmentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44LastUpdate", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44LastUpdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44StatusCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44StatusCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44ReasonCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44ReasonCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44ReasonDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44ReasonDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44TrackTrailer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44TrackTrailer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44TrackingStarted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44TrackingStarted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44TrackingCompleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44TrackingCompleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44TrackingError", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44TrackingError", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44UploadError", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44UploadError", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44Latitude", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44Latitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44Longitude", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44Longitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P44CurrentStop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "P44CurrentStop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdCO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdCO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSMA_TimeStamp", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSMA_TimeStamp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdCO", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "IdCO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Efret_TMS.Properties.Settings.Default.axsConnString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT IdCO, NewCO, DateCreation, DateUpdate, IdContractHolder, ContractHolderReference, CMR, SalesPrice, ConversionRate, SalesPriceCurrency, SalesPriceInCurrency, SalesPriceVATCode, SalesPriceVATRate, SalesPriceVATAmount, ContractHolderPaymentTerm, ContractHolderPaymentTermOEM, Comment, InvoiceInGBP, AllRisksInsurance, ContractHolderEmail, ContractHolderTel, ContractHolderMob, TrailerNumber, TrailerTypeAutorised, InterModal, Invoiced, UserCreation, UserUpdate, UserOwner, Actif, Xroute, TripType2, BaseFreightRate, FuelSurcharge, StopOver1, StopOver2, FuelSurchargeRate, AdhocRate, demurrage, DemurageCode, InvoiceNumber, InvoiceDate, InvoicePath, Line, InvoiceEDI, ShipperAccount, ReroutingSurcharge, Wharehousing, Redelivery, Cancellation, BillingAccount, AdHocSurcharge, DriverDententionAtUnloading, eShipCo, Corridor, CoS, CustomClearance, P44ToUpload, P44Uploaded, P44ShipmentID, P44LastUpdate, P44StatusCode, P44ReasonCode, P44ReasonDescription, P44TrackTrailer, P44TrackingStarted, P44TrackingCompleted, P44TrackingError, P44UploadError, P44Latitude, P44Longitude, P44CurrentStop, SSMA_TimeStamp FROM dbo.NewCO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(axsCODataSet.NewCODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual axsCODataSet.NewCODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            axsCODataSet.NewCODataTable dataTable = new axsCODataSet.NewCODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(axsCODataSet.NewCODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(axsCODataSet dataSet) {
            return this.Adapter.Update(dataSet, "NewCO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_IdCO, byte[] Original_SSMA_TimeStamp) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_IdCO));
            if ((Original_SSMA_TimeStamp == null)) {
                throw new global::System.ArgumentNullException("Original_SSMA_TimeStamp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((byte[])(Original_SSMA_TimeStamp));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string NewCO, 
                    global::System.Nullable<global::System.DateTime> DateCreation, 
                    global::System.Nullable<global::System.DateTime> DateUpdate, 
                    string IdContractHolder, 
                    string ContractHolderReference, 
                    global::System.Nullable<bool> CMR, 
                    global::System.Nullable<float> SalesPrice, 
                    global::System.Nullable<float> ConversionRate, 
                    string SalesPriceCurrency, 
                    global::System.Nullable<float> SalesPriceInCurrency, 
                    string SalesPriceVATCode, 
                    global::System.Nullable<float> SalesPriceVATRate, 
                    global::System.Nullable<float> SalesPriceVATAmount, 
                    string ContractHolderPaymentTerm, 
                    global::System.Nullable<bool> ContractHolderPaymentTermOEM, 
                    string Comment, 
                    global::System.Nullable<float> InvoiceInGBP, 
                    string AllRisksInsurance, 
                    string ContractHolderEmail, 
                    string ContractHolderTel, 
                    string ContractHolderMob, 
                    string TrailerNumber, 
                    string TrailerTypeAutorised, 
                    global::System.Nullable<bool> InterModal, 
                    global::System.Nullable<bool> Invoiced, 
                    string UserCreation, 
                    string UserUpdate, 
                    string UserOwner, 
                    global::System.Nullable<bool> Actif, 
                    global::System.Nullable<bool> Xroute, 
                    string TripType2, 
                    global::System.Nullable<float> BaseFreightRate, 
                    global::System.Nullable<float> FuelSurcharge, 
                    string StopOver1, 
                    string StopOver2, 
                    global::System.Nullable<float> FuelSurchargeRate, 
                    global::System.Nullable<float> AdhocRate, 
                    global::System.Nullable<float> demurrage, 
                    string DemurageCode, 
                    global::System.Nullable<int> InvoiceNumber, 
                    global::System.Nullable<global::System.DateTime> InvoiceDate, 
                    string InvoicePath, 
                    string Line, 
                    string InvoiceEDI, 
                    string ShipperAccount, 
                    global::System.Nullable<float> ReroutingSurcharge, 
                    global::System.Nullable<float> Wharehousing, 
                    global::System.Nullable<float> Redelivery, 
                    global::System.Nullable<float> Cancellation, 
                    string BillingAccount, 
                    global::System.Nullable<float> AdHocSurcharge, 
                    global::System.Nullable<float> DriverDententionAtUnloading, 
                    global::System.Nullable<short> eShipCo, 
                    string Corridor, 
                    global::System.Nullable<bool> CoS, 
                    global::System.Nullable<decimal> CustomClearance, 
                    global::System.Nullable<bool> P44ToUpload, 
                    global::System.Nullable<bool> P44Uploaded, 
                    global::System.Nullable<double> P44ShipmentID, 
                    global::System.Nullable<global::System.DateTime> P44LastUpdate, 
                    string P44StatusCode, 
                    string P44ReasonCode, 
                    string P44ReasonDescription, 
                    global::System.Nullable<bool> P44TrackTrailer, 
                    global::System.Nullable<bool> P44TrackingStarted, 
                    global::System.Nullable<bool> P44TrackingCompleted, 
                    global::System.Nullable<bool> P44TrackingError, 
                    global::System.Nullable<bool> P44UploadError, 
                    global::System.Nullable<float> P44Latitude, 
                    global::System.Nullable<float> P44Longitude, 
                    global::System.Nullable<int> P44CurrentStop) {
            if ((NewCO == null)) {
                throw new global::System.ArgumentNullException("NewCO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NewCO));
            }
            if ((DateCreation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DateCreation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DateUpdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(DateUpdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((IdContractHolder == null)) {
                throw new global::System.ArgumentNullException("IdContractHolder");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(IdContractHolder));
            }
            if ((ContractHolderReference == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ContractHolderReference));
            }
            if ((CMR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(CMR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((SalesPrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((float)(SalesPrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ConversionRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((float)(ConversionRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((SalesPriceCurrency == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(SalesPriceCurrency));
            }
            if ((SalesPriceInCurrency.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((float)(SalesPriceInCurrency.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((SalesPriceVATCode == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(SalesPriceVATCode));
            }
            if ((SalesPriceVATRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((float)(SalesPriceVATRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SalesPriceVATAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((float)(SalesPriceVATAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((ContractHolderPaymentTerm == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(ContractHolderPaymentTerm));
            }
            if ((ContractHolderPaymentTermOEM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(ContractHolderPaymentTermOEM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Comment == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Comment));
            }
            if ((InvoiceInGBP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((float)(InvoiceInGBP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((AllRisksInsurance == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(AllRisksInsurance));
            }
            if ((ContractHolderEmail == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(ContractHolderEmail));
            }
            if ((ContractHolderTel == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(ContractHolderTel));
            }
            if ((ContractHolderMob == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(ContractHolderMob));
            }
            if ((TrailerNumber == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(TrailerNumber));
            }
            if ((TrailerTypeAutorised == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(TrailerTypeAutorised));
            }
            if ((InterModal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(InterModal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Invoiced.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(Invoiced.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((UserCreation == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(UserCreation));
            }
            if ((UserUpdate == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(UserUpdate));
            }
            if ((UserOwner == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(UserOwner));
            }
            if ((Actif.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((bool)(Actif.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Xroute.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(Xroute.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((TripType2 == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(TripType2));
            }
            if ((BaseFreightRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((float)(BaseFreightRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((FuelSurcharge.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((float)(FuelSurcharge.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((StopOver1 == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(StopOver1));
            }
            if ((StopOver2 == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(StopOver2));
            }
            if ((FuelSurchargeRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((float)(FuelSurchargeRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((AdhocRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((float)(AdhocRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((demurrage.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((float)(demurrage.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((DemurageCode == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(DemurageCode));
            }
            if ((InvoiceNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((int)(InvoiceNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((InvoiceDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((System.DateTime)(InvoiceDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((InvoicePath == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(InvoicePath));
            }
            if ((Line == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(Line));
            }
            if ((InvoiceEDI == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(InvoiceEDI));
            }
            if ((ShipperAccount == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(ShipperAccount));
            }
            if ((ReroutingSurcharge.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((float)(ReroutingSurcharge.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Wharehousing.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((float)(Wharehousing.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Redelivery.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((float)(Redelivery.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Cancellation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((float)(Cancellation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((BillingAccount == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(BillingAccount));
            }
            if ((AdHocSurcharge.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((float)(AdHocSurcharge.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((DriverDententionAtUnloading.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((float)(DriverDententionAtUnloading.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((eShipCo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((short)(eShipCo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Corridor == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(Corridor));
            }
            if ((CoS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((bool)(CoS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((CustomClearance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((decimal)(CustomClearance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((P44ToUpload.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((bool)(P44ToUpload.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((P44Uploaded.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((bool)(P44Uploaded.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((P44ShipmentID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((double)(P44ShipmentID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((P44LastUpdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((System.DateTime)(P44LastUpdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((P44StatusCode == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(P44StatusCode));
            }
            if ((P44ReasonCode == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(P44ReasonCode));
            }
            if ((P44ReasonDescription == null)) {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(P44ReasonDescription));
            }
            if ((P44TrackTrailer.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((bool)(P44TrackTrailer.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((P44TrackingStarted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[64].Value = ((bool)(P44TrackingStarted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((P44TrackingCompleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((bool)(P44TrackingCompleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((P44TrackingError.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((bool)(P44TrackingError.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((P44UploadError.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((bool)(P44UploadError.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((P44Latitude.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((float)(P44Latitude.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((P44Longitude.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[69].Value = ((float)(P44Longitude.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((P44CurrentStop.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((int)(P44CurrentStop.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NewCO, 
                    global::System.Nullable<global::System.DateTime> DateCreation, 
                    global::System.Nullable<global::System.DateTime> DateUpdate, 
                    string IdContractHolder, 
                    string ContractHolderReference, 
                    global::System.Nullable<bool> CMR, 
                    global::System.Nullable<float> SalesPrice, 
                    global::System.Nullable<float> ConversionRate, 
                    string SalesPriceCurrency, 
                    global::System.Nullable<float> SalesPriceInCurrency, 
                    string SalesPriceVATCode, 
                    global::System.Nullable<float> SalesPriceVATRate, 
                    global::System.Nullable<float> SalesPriceVATAmount, 
                    string ContractHolderPaymentTerm, 
                    global::System.Nullable<bool> ContractHolderPaymentTermOEM, 
                    string Comment, 
                    global::System.Nullable<float> InvoiceInGBP, 
                    string AllRisksInsurance, 
                    string ContractHolderEmail, 
                    string ContractHolderTel, 
                    string ContractHolderMob, 
                    string TrailerNumber, 
                    string TrailerTypeAutorised, 
                    global::System.Nullable<bool> InterModal, 
                    global::System.Nullable<bool> Invoiced, 
                    string UserCreation, 
                    string UserUpdate, 
                    string UserOwner, 
                    global::System.Nullable<bool> Actif, 
                    global::System.Nullable<bool> Xroute, 
                    string TripType2, 
                    global::System.Nullable<float> BaseFreightRate, 
                    global::System.Nullable<float> FuelSurcharge, 
                    string StopOver1, 
                    string StopOver2, 
                    global::System.Nullable<float> FuelSurchargeRate, 
                    global::System.Nullable<float> AdhocRate, 
                    global::System.Nullable<float> demurrage, 
                    string DemurageCode, 
                    global::System.Nullable<int> InvoiceNumber, 
                    global::System.Nullable<global::System.DateTime> InvoiceDate, 
                    string InvoicePath, 
                    string Line, 
                    string InvoiceEDI, 
                    string ShipperAccount, 
                    global::System.Nullable<float> ReroutingSurcharge, 
                    global::System.Nullable<float> Wharehousing, 
                    global::System.Nullable<float> Redelivery, 
                    global::System.Nullable<float> Cancellation, 
                    string BillingAccount, 
                    global::System.Nullable<float> AdHocSurcharge, 
                    global::System.Nullable<float> DriverDententionAtUnloading, 
                    global::System.Nullable<short> eShipCo, 
                    string Corridor, 
                    global::System.Nullable<bool> CoS, 
                    global::System.Nullable<decimal> CustomClearance, 
                    global::System.Nullable<bool> P44ToUpload, 
                    global::System.Nullable<bool> P44Uploaded, 
                    global::System.Nullable<double> P44ShipmentID, 
                    global::System.Nullable<global::System.DateTime> P44LastUpdate, 
                    string P44StatusCode, 
                    string P44ReasonCode, 
                    string P44ReasonDescription, 
                    global::System.Nullable<bool> P44TrackTrailer, 
                    global::System.Nullable<bool> P44TrackingStarted, 
                    global::System.Nullable<bool> P44TrackingCompleted, 
                    global::System.Nullable<bool> P44TrackingError, 
                    global::System.Nullable<bool> P44UploadError, 
                    global::System.Nullable<float> P44Latitude, 
                    global::System.Nullable<float> P44Longitude, 
                    global::System.Nullable<int> P44CurrentStop, 
                    int Original_IdCO, 
                    byte[] Original_SSMA_TimeStamp, 
                    int IdCO) {
            if ((NewCO == null)) {
                throw new global::System.ArgumentNullException("NewCO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NewCO));
            }
            if ((DateCreation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DateCreation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DateUpdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(DateUpdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((IdContractHolder == null)) {
                throw new global::System.ArgumentNullException("IdContractHolder");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(IdContractHolder));
            }
            if ((ContractHolderReference == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ContractHolderReference));
            }
            if ((CMR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(CMR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((SalesPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((float)(SalesPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ConversionRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((float)(ConversionRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((SalesPriceCurrency == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(SalesPriceCurrency));
            }
            if ((SalesPriceInCurrency.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((float)(SalesPriceInCurrency.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((SalesPriceVATCode == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(SalesPriceVATCode));
            }
            if ((SalesPriceVATRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((float)(SalesPriceVATRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SalesPriceVATAmount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((float)(SalesPriceVATAmount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((ContractHolderPaymentTerm == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(ContractHolderPaymentTerm));
            }
            if ((ContractHolderPaymentTermOEM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(ContractHolderPaymentTermOEM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Comment == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Comment));
            }
            if ((InvoiceInGBP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((float)(InvoiceInGBP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((AllRisksInsurance == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(AllRisksInsurance));
            }
            if ((ContractHolderEmail == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(ContractHolderEmail));
            }
            if ((ContractHolderTel == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(ContractHolderTel));
            }
            if ((ContractHolderMob == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(ContractHolderMob));
            }
            if ((TrailerNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(TrailerNumber));
            }
            if ((TrailerTypeAutorised == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(TrailerTypeAutorised));
            }
            if ((InterModal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(InterModal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Invoiced.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(Invoiced.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((UserCreation == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(UserCreation));
            }
            if ((UserUpdate == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(UserUpdate));
            }
            if ((UserOwner == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(UserOwner));
            }
            if ((Actif.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(Actif.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Xroute.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(Xroute.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((TripType2 == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(TripType2));
            }
            if ((BaseFreightRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((float)(BaseFreightRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((FuelSurcharge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((float)(FuelSurcharge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((StopOver1 == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(StopOver1));
            }
            if ((StopOver2 == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(StopOver2));
            }
            if ((FuelSurchargeRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((float)(FuelSurchargeRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((AdhocRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((float)(AdhocRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((demurrage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((float)(demurrage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((DemurageCode == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(DemurageCode));
            }
            if ((InvoiceNumber.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(InvoiceNumber.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((InvoiceDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(InvoiceDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((InvoicePath == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(InvoicePath));
            }
            if ((Line == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Line));
            }
            if ((InvoiceEDI == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(InvoiceEDI));
            }
            if ((ShipperAccount == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(ShipperAccount));
            }
            if ((ReroutingSurcharge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((float)(ReroutingSurcharge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Wharehousing.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((float)(Wharehousing.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Redelivery.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((float)(Redelivery.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Cancellation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((float)(Cancellation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((BillingAccount == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(BillingAccount));
            }
            if ((AdHocSurcharge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((float)(AdHocSurcharge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((DriverDententionAtUnloading.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((float)(DriverDententionAtUnloading.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((eShipCo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((short)(eShipCo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Corridor == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Corridor));
            }
            if ((CoS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((bool)(CoS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((CustomClearance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(CustomClearance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((P44ToUpload.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((bool)(P44ToUpload.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((P44Uploaded.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((bool)(P44Uploaded.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((P44ShipmentID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((double)(P44ShipmentID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((P44LastUpdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((System.DateTime)(P44LastUpdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((P44StatusCode == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(P44StatusCode));
            }
            if ((P44ReasonCode == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(P44ReasonCode));
            }
            if ((P44ReasonDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(P44ReasonDescription));
            }
            if ((P44TrackTrailer.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((bool)(P44TrackTrailer.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((P44TrackingStarted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((bool)(P44TrackingStarted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((P44TrackingCompleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((bool)(P44TrackingCompleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((P44TrackingError.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((bool)(P44TrackingError.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((P44UploadError.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((bool)(P44UploadError.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((P44Latitude.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((float)(P44Latitude.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((P44Longitude.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((float)(P44Longitude.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((P44CurrentStop.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((int)(P44CurrentStop.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[71].Value = ((int)(Original_IdCO));
            if ((Original_SSMA_TimeStamp == null)) {
                throw new global::System.ArgumentNullException("Original_SSMA_TimeStamp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((byte[])(Original_SSMA_TimeStamp));
            }
            this.Adapter.UpdateCommand.Parameters[73].Value = ((int)(IdCO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NewCO, 
                    global::System.Nullable<global::System.DateTime> DateCreation, 
                    global::System.Nullable<global::System.DateTime> DateUpdate, 
                    string IdContractHolder, 
                    string ContractHolderReference, 
                    global::System.Nullable<bool> CMR, 
                    global::System.Nullable<float> SalesPrice, 
                    global::System.Nullable<float> ConversionRate, 
                    string SalesPriceCurrency, 
                    global::System.Nullable<float> SalesPriceInCurrency, 
                    string SalesPriceVATCode, 
                    global::System.Nullable<float> SalesPriceVATRate, 
                    global::System.Nullable<float> SalesPriceVATAmount, 
                    string ContractHolderPaymentTerm, 
                    global::System.Nullable<bool> ContractHolderPaymentTermOEM, 
                    string Comment, 
                    global::System.Nullable<float> InvoiceInGBP, 
                    string AllRisksInsurance, 
                    string ContractHolderEmail, 
                    string ContractHolderTel, 
                    string ContractHolderMob, 
                    string TrailerNumber, 
                    string TrailerTypeAutorised, 
                    global::System.Nullable<bool> InterModal, 
                    global::System.Nullable<bool> Invoiced, 
                    string UserCreation, 
                    string UserUpdate, 
                    string UserOwner, 
                    global::System.Nullable<bool> Actif, 
                    global::System.Nullable<bool> Xroute, 
                    string TripType2, 
                    global::System.Nullable<float> BaseFreightRate, 
                    global::System.Nullable<float> FuelSurcharge, 
                    string StopOver1, 
                    string StopOver2, 
                    global::System.Nullable<float> FuelSurchargeRate, 
                    global::System.Nullable<float> AdhocRate, 
                    global::System.Nullable<float> demurrage, 
                    string DemurageCode, 
                    global::System.Nullable<int> InvoiceNumber, 
                    global::System.Nullable<global::System.DateTime> InvoiceDate, 
                    string InvoicePath, 
                    string Line, 
                    string InvoiceEDI, 
                    string ShipperAccount, 
                    global::System.Nullable<float> ReroutingSurcharge, 
                    global::System.Nullable<float> Wharehousing, 
                    global::System.Nullable<float> Redelivery, 
                    global::System.Nullable<float> Cancellation, 
                    string BillingAccount, 
                    global::System.Nullable<float> AdHocSurcharge, 
                    global::System.Nullable<float> DriverDententionAtUnloading, 
                    global::System.Nullable<short> eShipCo, 
                    string Corridor, 
                    global::System.Nullable<bool> CoS, 
                    global::System.Nullable<decimal> CustomClearance, 
                    global::System.Nullable<bool> P44ToUpload, 
                    global::System.Nullable<bool> P44Uploaded, 
                    global::System.Nullable<double> P44ShipmentID, 
                    global::System.Nullable<global::System.DateTime> P44LastUpdate, 
                    string P44StatusCode, 
                    string P44ReasonCode, 
                    string P44ReasonDescription, 
                    global::System.Nullable<bool> P44TrackTrailer, 
                    global::System.Nullable<bool> P44TrackingStarted, 
                    global::System.Nullable<bool> P44TrackingCompleted, 
                    global::System.Nullable<bool> P44TrackingError, 
                    global::System.Nullable<bool> P44UploadError, 
                    global::System.Nullable<float> P44Latitude, 
                    global::System.Nullable<float> P44Longitude, 
                    global::System.Nullable<int> P44CurrentStop, 
                    int Original_IdCO, 
                    byte[] Original_SSMA_TimeStamp) {
            return this.Update(NewCO, DateCreation, DateUpdate, IdContractHolder, ContractHolderReference, CMR, SalesPrice, ConversionRate, SalesPriceCurrency, SalesPriceInCurrency, SalesPriceVATCode, SalesPriceVATRate, SalesPriceVATAmount, ContractHolderPaymentTerm, ContractHolderPaymentTermOEM, Comment, InvoiceInGBP, AllRisksInsurance, ContractHolderEmail, ContractHolderTel, ContractHolderMob, TrailerNumber, TrailerTypeAutorised, InterModal, Invoiced, UserCreation, UserUpdate, UserOwner, Actif, Xroute, TripType2, BaseFreightRate, FuelSurcharge, StopOver1, StopOver2, FuelSurchargeRate, AdhocRate, demurrage, DemurageCode, InvoiceNumber, InvoiceDate, InvoicePath, Line, InvoiceEDI, ShipperAccount, ReroutingSurcharge, Wharehousing, Redelivery, Cancellation, BillingAccount, AdHocSurcharge, DriverDententionAtUnloading, eShipCo, Corridor, CoS, CustomClearance, P44ToUpload, P44Uploaded, P44ShipmentID, P44LastUpdate, P44StatusCode, P44ReasonCode, P44ReasonDescription, P44TrackTrailer, P44TrackingStarted, P44TrackingCompleted, P44TrackingError, P44UploadError, P44Latitude, P44Longitude, P44CurrentStop, Original_IdCO, Original_SSMA_TimeStamp, Original_IdCO);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private NewCOTableAdapter _newCOTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public NewCOTableAdapter NewCOTableAdapter {
            get {
                return this._newCOTableAdapter;
            }
            set {
                this._newCOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._newCOTableAdapter != null) 
                            && (this._newCOTableAdapter.Connection != null))) {
                    return this._newCOTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._newCOTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(axsCODataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._newCOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.NewCO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._newCOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(axsCODataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._newCOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.NewCO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._newCOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(axsCODataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._newCOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.NewCO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._newCOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(axsCODataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._newCOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._newCOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._newCOTableAdapter != null)) {
                    revertConnections.Add(this._newCOTableAdapter, this._newCOTableAdapter.Connection);
                    this._newCOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._newCOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._newCOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._newCOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._newCOTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._newCOTableAdapter != null)) {
                    this._newCOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._newCOTableAdapter]));
                    this._newCOTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591